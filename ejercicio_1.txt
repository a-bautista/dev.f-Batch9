/*JS está basado en la programación funcional. */

var obj = {
	"numero":1,
	"nombre":"Juan",
	"alumno":"true"
};

var f = function(){
	return{
		"a":4,
		"b":function() {return 3},
		"c":"hola"
	}
}

var arreglo = [{"nombre":"alex","apellido":"ramirez","edad":21,"inscrito":true},{"nombre":"alex","apellido":"martinez","edad":30,"inscrito":false}]



var funcion = function () {
   return {
     "a" : function(){return [2,3]},
     "b":[{"a":1},{"a":2},{"a":3}],
     "c":function(){return 4+5}
	}
}

console.log(funcion().a()[0]+funcion().c()+funcion().b[1].a)
console.log(arreglo[0].edad)

Being a new Uber user, you have $20 off your first ride. You want to make the most out of it and drive in the fancy car you can afford, without spending any out of pocket money.
There are 5 options, from the least to the most expensive: "UberX","UberXL","UberPlus","UberBlack","UberSuv".

You know the length "l" of your ride in miles and how much one mile costs for each car. Find the best car you can afford. 

Example: 

For l = 30 and (dollars per mile) fare = [0.3,0.5,0.7,1,1.3] the output should be "UberXL". Construct a function that solve this problem. 
With the structure fancyRide(l,fares){...} 

var fares = [0.3,0.5,0.7,1,1.3]

function fancyRide(l,fares){
	var cars   = ["UberX","UberXL","UberPlus","UberBlack","UberSuv"];
	var answer;
	for(var i =0;i<fares.length;i++){
	    if(l*fares[i]<20){
	    answer = cars[i];
	   }
	}
	return answer
}


